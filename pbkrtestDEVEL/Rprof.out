sample.interval=20000
"diffinv.vector" "diffinv.default" "diffinv" "KhatriRao" "FUN" "lapply" "mkReTrms" "lme4::lFormula" "eval" "eval" "lmer" "eval" "eval" "eval.parent" "compute_auxillary" "SATmodcomp_internal" "SATmodcomp.lmerMod" "SATmodcomp" 
"dim" "dim" "rbind" "<Anonymous>" "do.call" "mkReTrms" "lme4::lFormula" "eval" "eval" "lmer" "eval" "eval" "eval.parent" "compute_auxillary" "SATmodcomp_internal" "SATmodcomp.lmerMod" "SATmodcomp" 
".Call" "eval_f" "<Anonymous>" ".Call" "nloptr" "<Anonymous>" "do.call" "withCallingHandlers" "optwrap" "optimizeLmer" "lmer" "eval" "eval" "eval.parent" "compute_auxillary" "SATmodcomp_internal" "SATmodcomp.lmerMod" "SATmodcomp" 
".Call" "eval_f" "<Anonymous>" ".Call" "nloptr" "<Anonymous>" "do.call" "withCallingHandlers" "optwrap" "optimizeLmer" "lmer" "eval" "eval" "eval.parent" "compute_auxillary" "SATmodcomp_internal" "SATmodcomp.lmerMod" "SATmodcomp" 
".Call" "fun" "deriv12" "optwrap" "optimizeLmer" "lmer" "eval" "eval" "eval.parent" "compute_auxillary" "SATmodcomp_internal" "SATmodcomp.lmerMod" "SATmodcomp" 
"isTRUE" "validityMethod" "isTRUE" "anyStrings" "validObject" "<Anonymous>" "do.call" "standardGeneric" "t" "mkReTrms" "lme4::lFormula" "eval" "eval" "lme4::lmer" "eval" "eval" "eval.parent" "compute_auxillary" "SATmodcomp_internal" "SATmodcomp.lmerMod" "SATmodcomp" 
"findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "func" "genD.default" "genD" "hessian.default" "numDeriv::hessian" "compute_auxillary" "SATmodcomp_internal" "SATmodcomp.lmerMod" "SATmodcomp" 
"as.environment" "as.environment" "$" "$" "func" "genD.default" "genD" "hessian.default" "numDeriv::hessian" "compute_auxillary" "SATmodcomp_internal" "SATmodcomp.lmerMod" "SATmodcomp" 
"as.environment" "as.environment" "$" "$" "devfun" "func" "genD.default" "genD" "hessian.default" "numDeriv::hessian" "compute_auxillary" "SATmodcomp_internal" "SATmodcomp.lmerMod" "SATmodcomp" 
".Call" "devfun" "func" "jacobian.default" "numDeriv::jacobian" "compute_auxillary" "SATmodcomp_internal" "SATmodcomp.lmerMod" "SATmodcomp" 
