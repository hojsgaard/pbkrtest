---
title: "Logistic regression"
subtitle: "with `caracas`"
author: "Søren Højsgaard"
date: "`r date()`"
format: 
  pdf: 
    toc: true
    toc-depth: 4
    number-sections: true
    number-depth: 5
    papersize: a4
    fontsize: 12pt
  html:
    toc: true
    toc-depth: 4
    number-sections: true
    number-depth: 5
---

\def\cov{Cov}
\def\corr{Corr}
\def\var{Var}
\def\nn{\nonumber}

\def\E{\mathbb{E}}
\def\EE{\mathbb{E}}
\def\Var{\mathbb{V}\text{ar}}
\def\Cov{\mathbb{C}\text{ov}}
\def\Corr{\mathbb{C}\text{orr}}

\def\zz{\mathbf{E}}
\def\pkg#1{\texttt{#1}}
\def\bbeta1{\mathbf{\beta}}
\def\transp{^\top}
\def\inv{^{-1}}
\def\fixme#1{\textbf{FIXME: #1}}


```{r}
library(modelr)
library(ggplot2)
library(broom)
library(caracas)
```

```{r}
data(Orthodont, package="nlme")
dat <- nlme::Orthodont[1:64,]
library(lme4)

lmm1 <- lmer(distance ~ age + (1|Subject), data=dat, REML=F)


X <- getME(lmm1, "X")
X
Z <- getME(lmm1, "Z")
Z
y <- dat$distance

```

```{r}
library(caracas) 
def_sym(sigma, omega)

G <- diag_("omega^2", ncol(Z))
G
Z <- as_sym(Z)

ZGZt <- Z %*% G %*% t(Z)

R1 <- sigma^2 * toeplitz_(c(1, "r", "r^2", "r^3"))
R1

I <- diag_(1, ncol(Z))
R <-kronecker(I, R1)

V <- ZGZt + R
V

Vf <- as_func(V, vec_arg = T)

V. <- Vf(c(2,0,1))
V.

L <- t(chol(V.))
W <- solve(L)


get_logL <- function(parm){
    V. <- Vf(parm)
    Vi. <- solve(V.)
    b_est <- solve(t(X) %*% Vi. %*% X) %*% t(X) %*% Vi. %*% y
    res <- y - X %*% b_est 
    Q <- as.numeric(t(res) %*% Vi. %*% res)
    logL <- -0.5 * (det(V.) - Q)
    logL
}

get_logL <- function(parm){
    parm[1] <- exp(parm[1])
    parm[2] <- tanh(parm[2])
    parm[3] <- exp(parm[3])
    print(parm)
    V. <- Vf(parm)
    Vi. <- solve(V.)
    b_est <- solve(t(X) %*% Vi. %*% X) %*% t(X) %*% Vi. %*% y
    res <- y - X %*% b_est 
    Q <- as.numeric(t(res) %*% Vi. %*% res)
    logL <- -0.5 * (log(det(V.)) - Q)
    logL
}

get_logL(c(0,0,0))


V. <- Vf(c(1,.1,1))
chol(V)

opt <- optim(c(0, 0, .1), get_logL,
             method="CG",
             control=list(fnscale=-1))

opt
opt$par[1] |> exp() |> sqrt()
opt$par[2] |> tanh() 
opt$par[3] |> exp() |> sqrt()


[1]


opt <- optim(c(0,0,1),
             get_logL,
      method="L-BFGS-B",
      lower=c(-2, -2, -2),
      upper=c(2, 2, 2),
      control=list(fnscale=-1))
opt



```
