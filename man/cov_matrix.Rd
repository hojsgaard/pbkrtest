% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pbkr_cov_matrix.R
\name{cov_matrix}
\alias{cov_matrix}
\alias{cov_matrix.lmerMod}
\alias{cov_matrix.lme}
\alias{cov_matrix.gls}
\alias{cov_matrix.lm}
\title{Compute Marginal Covariance Matrix of the Response}
\usage{
cov_matrix(fit, ...)

\method{cov_matrix}{lmerMod}(fit, ...)

\method{cov_matrix}{lme}(fit, ...)

\method{cov_matrix}{gls}(fit, ...)

\method{cov_matrix}{lm}(fit, ...)
}
\arguments{
\item{fit}{A fitted model object. Supported classes: \code{lmerMod} (from \code{lme4}), \code{lme} and \code{gls} (from \code{nlme}).}

\item{...}{Additional arguments (currently ignored).}
}
\value{
A sparse matrix (class \code{"dgCMatrix"}) representing the marginal covariance matrix \eqn{V}.
}
\description{
These methods compute the marginal covariance matrix
\eqn{V = Var(y)} for fitted linear and linear mixed models of
the form \deqn{y = X \beta + Z u + \epsilon,} where \eqn{u} and
\eqn{\epsilon} are random effects and residual errors.

The returned matrix represents the implied covariance structure of
the response vector, combining contributions from both random
effects and residuals.
}
\section{Methods}{

\describe{
\item{\code{cov_matrix.lmerMod}}{For \code{lmerMod} models from the \code{lme4} package. Computes \eqn{V = Z D Z' + \sigma^2 I}.}
\item{\code{cov_matrix.lme}}{For \code{lme} models from the \code{nlme} package. Computes block-diagonal covariance with group-specific structures.}
\item{\code{cov_matrix.gls}}{For \code{gls} models from the \code{nlme} package. Includes optional correlation structures.}
}
}

\examples{
if (require(nlme) && require(Matrix)) {
  ## gls example
  fit_gls <- gls(distance ~ age, data = Orthodont)
  V_gls <- cov_matrix(fit_gls)
  print(V_gls)

  ## lme example
  fit_lme <- lme(distance ~ age, random = ~ 1 | Subject, data = Orthodont)
  V_lme <- cov_matrix(fit_lme)
  print(V_lme)
}

if (require(lme4) && require(Matrix)) {
  ## lmerMod example
  fit_lmer <- lme4::lmer(Reaction ~ Days + (Days | Subject), sleepstudy)
  V_lmer <- cov_matrix(fit_lmer)
  print(V_lmer)
}

}
