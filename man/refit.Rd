% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pbkr_refit.R
\name{refit.lm}
\alias{refit.lm}
\alias{refit.lme}
\alias{refit.gls}
\title{Refit nlme model with New Response}
\usage{
\method{refit}{lm}(object, newresp = NULL, ...)

\method{refit}{lme}(object, newresp = NULL, ...)

\method{refit}{gls}(object, newresp = NULL, ...)
}
\arguments{
\item{object}{A fitted model object. Supported classes include \code{lm}, \code{lme} (from \pkg{nlme}), and \code{gls} (from \pkg{nlme}).}

\item{newresp}{A numeric vector of new response values of the same length as the original data.}

\item{...}{Additional arguments (currently ignored).}
}
\value{
A new fitted model object of the same class as the original.
}
\description{
Re-estimates a model using the same formula and design but with a
new response vector.

The \code{refit} generic allows simulation-based workflows (e.g.,
parametric bootstrap) where new synthetic responses are drawn from
a fitted model and the model is re-fitted with the same design
structure.
}
\section{Methods}{

\describe{
\item{\code{refit.lm}}{Refits a linear model with the same formula but a new response vector.}
\item{\code{refit.lme}}{Refits a linear mixed-effects model (from \pkg{nlme}) with new response data.}
\item{\code{refit.gls}}{Refits a generalized least squares model (from \pkg{nlme}) with new response data.}
}
}

\examples{
if (require(nlme) && require(lme4)) {
  data(Orthodont, package = "nlme")

  # Fit models
  fit_lm  <- lm(distance ~ age, data = Orthodont)
  fit_gls <- gls(distance ~ age, data = Orthodont)
  fit_lme <- lme(distance ~ age, random = ~ 1 | Subject, data = Orthodont)

  # Simulate new response vectors
  set.seed(123)
  new_y <- rnorm(nrow(Orthodont), mean = mean(Orthodont$distance), sd = sd(Orthodont$distance))

  # Refit models with new response
  refit(fit_lm, newresp = new_y)
  refit(fit_gls, newresp = new_y)
  refit(fit_lme, newresp = new_y)
}

}
